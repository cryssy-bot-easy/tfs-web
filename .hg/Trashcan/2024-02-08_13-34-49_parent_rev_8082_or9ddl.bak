diff --git a/grails-app/controllers/com/ucpb/tfsweb/lc/dataentry/LcDataEntryAdjustmentController.groovy b/grails-app/controllers/com/ucpb/tfsweb/lc/dataentry/LcDataEntryAdjustmentController.groovy
deleted file mode 100644
--- a/grails-app/controllers/com/ucpb/tfsweb/lc/dataentry/LcDataEntryAdjustmentController.groovy
+++ /dev/null
@@ -1,463 +0,0 @@
-package com.ucpb.tfsweb.lc.dataentry
-
-import grails.converters.JSON
-import java.text.DecimalFormat
-import org.springframework.web.multipart.MultipartHttpServletRequest
-import org.springframework.web.multipart.MultipartFile
-
-class LcDataEntryAdjustmentController {
-
-    def headerService
-    def dataEntryService
-	def parserService
-
-    def routingInformationService
-
-    def documentUploadingService
-
-    def tabUtilityService
-	def facilityService
-	
-	def foreignExchangeService
-	def ratesService
-	def coreAPIService
-
-	//for AMLA
-	def chargesPaymentService
-	
-    // sets service type
-    protected String REFERENCE_TYPE = "DATA_ENTRY"
-    protected String SERVICE_TYPE = "Adjustment"
-    protected String DOCUMENT_CLASS = "LC"
-
-    // render page
-	def viewAdjustment() {
-		if(chainModel) {
-			session.dataEntryModel = chainModel
-		}
-		
-		if(session.dataEntryModel.transactionSequenceNumber){
-			def facility = facilityService.getFacilityBalanceRequest(new Long(session.dataEntryModel.transactionSequenceNumber), session.dataEntryModel.serviceInstructionId)
-			println "facility: " + facility
-			
-			while (facility.status.equals("pending")){
-				facility = facilityService.getFacilityBalanceRequest(new Long(session.dataEntryModel.transactionSequenceNumber), session.dataEntryModel.serviceInstructionId)
-			}
-			if (facility.status.equals("success")){
-				session.dataEntryModel << [isOverAvailed : !facility.isBalanceSufficient]
-				if (!facility.isBalanceSufficient){
-					def overAvailment
-					if(facility.hasCramApproval){
-						overAvailment = "There is an over-availment in facility. Facility balance is: <br/>PHP " + new DecimalFormat("#,##0.00").format(new BigDecimal(facility.balance)) + "."
-					} else {
-						overAvailment = "Facility balance is insufficient. Current balance is: PHP " + new DecimalFormat("#,##0.00").format(new BigDecimal(facility.balance)) + "."
-					}
-					session.dataEntryModel << [overAvailment : overAvailment]
-				}
-			}
-		}
-		
-		//go to unacted if cancelled from basic details tab
-		if(session.cancelBd){
-			 session.removeAttribute("cancelBd")
-			 render(view:"/main/unacted_transaction")
-		}
-		else if(session.dataEntryModel) {
-			render(view: "/lc/dataentry/opening/index", model:chainModel ? chainModel : session.dataEntryModel)
-			
-			//for standby adjustment
-			def exchange = foreignExchangeService.extractRatesByBaseCurrency(ratesService.getRatesByBaseCurrency().display, chainModel)
-			session.dataEntryModel << [exchange:exchange]
-
-			def urrrates = foreignExchangeService.formatUrrRates(ratesService.getRatesUrr().display, chainModel)
-			session.dataEntryModel << [urrrates:urrrates]
-		}else{
-			render(view: "/main/unauthorized")
-		}
-	}
-
-	// trigger viewing of page
-	def viewAdjustmentDataEntry() {
-        // get lc class and type
-        String documentType = params.documentType
-        String documentSubType1 = params.documentSubType1.toUpperCase()
-        String documentSubType2 = params.documentSubType2
-        session.etsPopup = "false"
-
-        // construct header title
-        String headerTitle = headerService.getDataEntryTitle(documentType, DOCUMENT_CLASS, documentSubType1, SERVICE_TYPE, documentSubType2)
-
-        // keep session model
-        session.dataEntryModel = [documentType: documentType, documentClass: DOCUMENT_CLASS, documentSubType1: documentSubType1, title: headerTitle, serviceType: SERVICE_TYPE, referenceType: REFERENCE_TYPE]
-
-        if (params.tradeServiceId) {
-            Map<String, Object> dataEntryMap = dataEntryService.getDataEntry(params.tradeServiceId)
-
-            dataEntryMap.each {
-                if(!it.key.equals("referenceType") && !it.key.equals("serviceType") && !it.key.equals("documentClass")) {
-                    session.dataEntryModel << it
-                }
-            }
-        }
-
-        // todo: refactor, this should be in a service or something
-        // todo: we are still using etsModel so we don't have to do an if in the instructions and routing tab
-        def documentServiceRoute = routingInformationService.getNextMainApprover(DOCUMENT_CLASS, documentType, documentSubType1, documentSubType2, REFERENCE_TYPE.toUpperCase(), SERVICE_TYPE?.toUpperCase(), session.username, session.userrole.id, session.unitcode, session.dataEntryModel, session.userLevel)
-        session.nextRoute = documentServiceRoute
-        session.dataEntryModel << routingInformationService.getMainApprovalMode(DOCUMENT_CLASS, documentType, documentSubType1, documentSubType2,SERVICE_TYPE?.toUpperCase(), session.dataEntryModel.approvers)
-
-        session.removeAttribute("financial")
-        session.removeAttribute("postApprovalRequirement")
-        session.removeAttribute("amountToCheck")
-        session.removeAttribute("signingLimit")
-        session.removeAttribute("postingAuthority")
-
-        def productReference = routingInformationService.getProductReferences(DOCUMENT_CLASS, documentType, documentSubType1, documentSubType2, SERVICE_TYPE?.toUpperCase(), session.dataEntryModel, session.unitcode, session.username)
-
-        session.financial = productReference.financial
-        session.postApprovalRequirement = productReference.postApprovalRequirement
-        session.amountToCheck = productReference.amountToCheck
-        session.signingLimit = productReference.signingLimit
-        session.postingAuthority = productReference.postingAuthority
-		if("View Data Entry" == params.dataEntryButtonCaption){
-			session.dataEntryModel<<[viewMode:'viewMode']
-		}else{
-			session.dataEntryModel<<[viewMode:params.viewMode]
-			session.dataEntryModel<<[hasRoute:params.hasRoute]
-		}
-		//for Amla
-		def paymentsMade = chargesPaymentService.findAllPaymentsForAmla(params.tradeServiceId)
-		
-		List<Object> paymentList = new ArrayList<Map<String, Object>>();
-		paymentList.addAll(paymentsMade)
-
-		def count=0;
-
-		for(Object listahan:paymentList.listIterator()) {
-			
-			println paymentList.get(count).toString() + " aaaarrrrraaaaayyyyy " + count.toString()
-			
-			def paymentDetail = paymentList.get(count)
-			for(Map.Entry<String, String> laman: paymentDetail.entrySet()) {
-				
-				println laman.getKey() + " : " + laman.getValue()
-				
-				if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("CASA")
-					&& paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")){
-					session.dataEntryModel<<[amlaCasaFlag:"1",
-											 amlaCasaFlagPhp:"1",
-											 amlaCasaFlagAmount:paymentDetail.get("AMOUNT").toString()]
-				}
-				if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("CASA")
-						&& !paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")){
-						session.dataEntryModel<<[amlaCasaFlag:"1",
-												 amlaCasaFlagFx:"1",
-												 amlaCasaFlagAmount:paymentDetail.get("AMOUNT").toString(),
-												 amlaCasaFlagFxCurrency:paymentDetail.get("CURRENCY").toString()]
-				}
-						
-				if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("REMITTANCE")
-					&& paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")) {
-					session.dataEntryModel<<[amlaRemittanceFlag:"1",
-											 amlaRemittanceFlagPhp:"1",
-											 amlaRemittanceFlagAmount:paymentDetail.get("AMOUNT").toString()]
-				}
-				if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("REMITTANCE")
-					&& !paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")) {
-					session.dataEntryModel<<[amlaRemittanceFlag:"1",
-											 amlaRemittanceFlagFx:"1",
-											 amlaRemittanceFlagAmount:paymentDetail.get("AMOUNT").toString()]
-				}
-				
-				if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("CASH")
-					&& paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")) {
-					session.dataEntryModel<<[amlaCashFlag:"1",
-											 amlaCashFlagPhp:"1",
-											 amlaCashFlagAmount:paymentDetail.get("AMOUNT").toString()]
-				}
-				if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("CASH")
-					&& !paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")) {
-					session.dataEntryModel<<[amlaCashFlag:"1",
-											  amlaCashFlagFx:"1",
-											 amlaCashFlagAmount:paymentDetail.get("AMOUNT").toString()]
-				}
-					
-				if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("CHECK")
-					&& paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")) {
-					session.dataEntryModel<<[amlaCheckFlag:"1",
-											 amlaCheckFlagPhp:"1",
-											 amlaCheckFlagAmount:paymentDetail.get("AMOUNT").toString()]
-				}
-				if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("CHECK")
-					&& !paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")) {
-					session.dataEntryModel<<[amlaCheckFlag:"1",
-											 amlaCheckFlagFx:"1",
-											 amlaCheckFlagAmount:paymentDetail.get("AMOUNT").toString()]
-				}
-					//added Remittance as per discussion with maam juliet 02/20/2015
-					//same trancode with Check
-					if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("REMITTANCE")
-						&& paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")) {
-						session.dataEntryModel<<[amlaRemittanceFlag:"1",
-												 amlaRemittanceFlagPhp:"1",
-												 amlaRemittanceFlagAmount:paymentDetail.get("AMOUNT").toString()]
-
-					}
-					if(paymentDetail.get("PAYMENTINSTRUMENTTYPE").toString().equalsIgnoreCase("REMITTANCE")
-						&& !paymentDetail.get("CURRENCY").toString().equalsIgnoreCase("PHP")) {
-						session.dataEntryModel<<[amlaRemittanceFlag:"1",
-												 amlaRemittanceFlagFx:"1",
-												 amlaRemittanceFlagAmount:paymentDetail.get("AMOUNT").toString(),
-												 amlaRemittanceFlagFxCurrency:paymentDetail.get("CURRENCY").toString()]
-					}
-			}
-			count++
-		}
-        // chain to render page
-        chain(action:"viewAdjustment", model: session.dataEntryModel)
-	}
-	
-    def saveAdjustmentDataEntry() {
-        // get lc class and type
-        String documentType = params.documentType
-        String documentSubType1 = params.documentSubType1.toUpperCase()
-        String documentSubType2 = params.documentSubType2
-
-        //construct header title
-        String headerTitle = headerService.getDataEntryTitle(documentType, DOCUMENT_CLASS, documentSubType1, SERVICE_TYPE, documentSubType2)
-
-        // keep session model
-        session.dataEntryModel = [documentType: documentType, documentClass: DOCUMENT_CLASS, documentSubType1: documentSubType1, documentSubType2: documentSubType2, title: headerTitle, serviceType: SERVICE_TYPE, referenceType: REFERENCE_TYPE]
-
-        params.saveAs = "PENDING"
-
-        // trigger command
-        params.put("username", session.username)
-        params.put("unitcode", session.unitcode)
-        Map<String, Object> dataEntryMap = dataEntryService.saveDataEntry(params)
-
-        dataEntryMap.each{
-            if(!it.key.equals("referenceType") && !it.key.equals("serviceType") && !it.key.equals("documentClass")) {
-                session.dataEntryModel << it
-            }
-        }
-
-
-        def documentServiceRoute = routingInformationService.getNextMainApproverTsdInitiated(DOCUMENT_CLASS, documentType, documentSubType1, documentSubType2, REFERENCE_TYPE.toUpperCase(), SERVICE_TYPE?.toUpperCase(), session.username, session.userrole.id, session.unitcode, session.dataEntryModel, session.userLevel)
-        session.nextRoute = documentServiceRoute
-        session.dataEntryModel << routingInformationService.getMainApprovalMode(DOCUMENT_CLASS, documentType, documentSubType1, documentSubType2,SERVICE_TYPE?.toUpperCase(), session.dataEntryModel.approvers)
-		session.cancelBd=params.cancelBd
-		
-        // chain to render page
-        chain(action:"viewAdjustment", model:session.dataEntryModel)
-    }
-	
-	def updateAdjustmentDataEntry() {
-        // get lc class and type
-        String documentType = params.documentType
-        String documentSubType1 = params.documentSubType1.toUpperCase()
-        String documentSubType2 = params.documentSubType2
-
-        //construct header title
-        String headerTitle = headerService.getDataEntryTitle(documentType, DOCUMENT_CLASS, documentSubType1, SERVICE_TYPE, documentSubType2)
-
-        // keep session model
-        session.dataEntryModel = [documentType: documentType, documentClass: DOCUMENT_CLASS, documentSubType1: documentSubType1, documentSubType2: documentSubType2, title: headerTitle, serviceType: SERVICE_TYPE, referenceType: REFERENCE_TYPE]
-        session.dataEntryModel << [formName: tabUtilityService.getTabName(params.form)]
-
-        params.put("username", session.username)
-        params.put("unitcode", session.unitcode)
-        // trigger command
-        Map<String, Object> dataEntryMap = dataEntryService.updateDataEntry(params)
-
-        dataEntryMap.each{
-            if(!it.key.equals("referenceType") && !it.key.equals("serviceType") && !it.key.equals("documentClass")) {
-                session.dataEntryModel << it
-            }
-        }
-		session.cancelBd=params.cancelBd
-		//For AMLA
-		session.dataEntryModel<<[amlaCasaFlag:params.amlaCasaFlag,
-								amlaCashFlag:params.amlaCashFlag,
-								amlaCheckFlag:params.amlaCheckFlag,
-								amlaRemittanceFlag:params.amlaRemittanceFlag,
-								amlaCasaFlagPhp:params.amlaCasaFlagPhp,
-								amlaCashFlagPhp:params.amlaCashFlagPhp,
-								amlaCheckFlagPhp:params.amlaCheckFlagPhp,
-								amlaRemittanceFlagPhp:params.amlaRemittanceFlagPhp,
-								amlaCasaFlagAmount:params.amlaCasaFlagAmount,
-								amlaCashFlagAmount:params.amlaCashFlagAmount,
-								amlaCheckFlagAmount:params.amlaCheckFlagAmount,
-								amlaRemittanceFlagAmount:params.amlaRemittanceFlagAmount,
-								amlaCasaFlagFx:params.amlaCasaFlagFx,
-								amlaCashFlagFx:params.amlaCashFlagFx,
-								amlaCheckFlagFx:params.amlaCheckFlagFx,
-								amlaRemittanceFlagFx:params.amlaRemittanceFlagFx,
-								amlaRemittanceFlagFxCurrency:params.amlaRemittanceFlagFxCurrency,
-								amlaCasaFlagFxCurrency:params.amlaCasaFlagFxCurrency]
-		
-        // chain to render page
-        chain(action:"viewAdjustment", model:session.dataEntryModel)
-	}
-
-    def updateDataEntryStatus() {
-        // get lc class and type
-        String documentType = params.documentType
-        String documentSubType1 = params.documentSubType1.toUpperCase()
-        String documentSubType2 = params.documentSubType2
-
-        //construct header title
-        String headerTitle = headerService.getDataEntryTitle(documentType, DOCUMENT_CLASS, documentSubType1, SERVICE_TYPE, documentSubType2)
-
-        String statusAction = routingInformationService.getStatusAction(session.financial,
-                params.statusAction,
-                session.signingLimit,
-                session.amountToCheck,
-                session.dataEntryModel?.status,
-                session.postApprovalRequirement)
-
-        params.statusAction = statusAction
-
-        // keep session model
-        session.dataEntryModel = [documentType: documentType, documentClass: DOCUMENT_CLASS, documentSubType1: documentSubType1, documentSubType2: documentSubType2, title: headerTitle, serviceType: SERVICE_TYPE, referenceType: REFERENCE_TYPE]
-
-        params.put("username", session.username)
-        params.put("unitcode", session.unitcode)
-        // trigger command
-        dataEntryService.updateDataEntry(params)
-
-        // chain to render page
-        redirect(controller: "unactedTransactions", action: "viewUnacted")
-    }
-
-    def uploadDocument() {
-        def jsonData
-        try{
-            ////printlnrequest
-            MultipartHttpServletRequest multiRequest = (MultipartHttpServletRequest) request
-            MultipartFile uploadedFile = multiRequest.getFile("fileLocation")
-
-            String tradeServiceId = params?.tradeServiceId
-            println "tradeServiceId = ${tradeServiceId}"
-
-            params.filename = documentUploadingService.saveFile(uploadedFile, tradeServiceId)
-
-
-        } catch(Exception e){
-            e.printStackTrace()
-            ////printlne.message
-        }
-        //NOTE: We do this because of a conflict between FileUpload and MultipartHttpSevletRequest that is causing an error in the Spring Remoting
-        redirect(controller:'lcDataEntryAdjustment', action:'invokeUploadCommand',params:params)
-    }
-
-    def invokeUploadCommand(){
-        def jsonData
-
-        try{
-
-            session.dataEntryModel << [formName: tabUtilityService.getTabName(params.form)]
-
-            params.put("username", session.username)
-            params.put("unitcode", session.unitcode)
-            // trigger command
-            String temp =  dataEntryService.uploadAttachedToTradeService(params)
-            jsonData = [success: true]
-        } catch(Exception e){
-            e.printStackTrace()
-            ////printlne.message
-            jsonData = [success: false]
-        }
-        chain(action:"viewAdjustment", model: session.dataEntryModel)
-    }
-
-    def downloadFile() {
-
-        String id = params?.id
-        println "id = ${id}"
-
-        String tradeServiceId = params?.tradeServiceId
-        println "tradeServiceId = ${tradeServiceId}"
-
-       def returnValue = coreAPIService.dummySendQuery(params, "getFileDetails", "attachment/")
-
-        def fileName = returnValue?.details?.filename
-
-        if (fileName != null) {
-
-            File file = documentUploadingService.retrieveFile(fileName, tradeServiceId)
-
-            if (file.exists()) {
-                if(file.canRead()){
-                    response.setContentType("application/octet-stream")
-                    response.setHeader("Content-disposition", "filename=${file.name}")
-                    response.outputStream << file.bytes
-                    return
-                }
-            }
-
-        } else {
-            return
-        }
-    }
-
-    def deleteDocument() {
-
-        // sets statusAction to deleteDocument
-        params.statusAction = "deleteDocument"
-
-        // trigger command
-        // TODO do delete document
-
-        String id = params?.id
-        String tradeServiceId = params?.tradeServiceId
-
-        // println "id = ${id}"
-        // println "filename = ${filename}"
-        // println "tradeServiceId = ${tradeServiceId}"
-
-        def jsonData = [:]
-
-        try {
-
-            // Delete attachment record first in db, then delete the file. The reverse is dangerous.
-            def returnValue = coreAPIService.dummySendCommand(params, "delete", "attachment")
-
-            def deleted = null
-            if (returnValue.status == "ok") {
-                // If successful, delete the actual file
-                deleted = documentUploadingService.deleteFile(returnValue.details.filename, tradeServiceId)
-            } else if (returnValue.status == "error") {
-                throw new Exception(returnValue.error.code);
-            }
-
-            jsonData = [success: true]
-
-        } catch (Exception e) {
-            e.printStackTrace()
-            jsonData = [success: false, message: e.getMessage()]
-        }
-
-        render jsonData as JSON
-    }
-
-    def viewAttachments() {
-
-        def tradeServiceIdHolder =  params.tradeServiceIdHolder
-        ////println"tradeServiceIdHolder:" + tradeServiceIdHolder
-        def maxRows = params.int('rows') ?: 10
-        def currentPage = params.int('page') ?: 1
-        def rowOffset = currentPage == 1 ? 0 : (currentPage - 1) * maxRows
-
-        def mapList = dataEntryService.getAttachmentList( maxRows, rowOffset, currentPage, tradeServiceIdHolder)
-
-        def totalRows = mapList.totalRows
-        def numberOfPages = Math.ceil(totalRows / maxRows)
-        def results = dataEntryService.getGridFormattedAttachments(mapList.display, tradeServiceIdHolder)
-
-        def jsonData = [rows: results, page: currentPage, records: totalRows, total: numberOfPages]
-        render jsonData as JSON
-
-    }
-	
-}
diff --git a/grails-app/controllers/com/ucpb/tfsweb/main/FacilityController.groovy b/grails-app/controllers/com/ucpb/tfsweb/main/FacilityController.groovy
deleted file mode 100644
--- a/grails-app/controllers/com/ucpb/tfsweb/main/FacilityController.groovy
+++ /dev/null
@@ -1,228 +0,0 @@
-package com.ucpb.tfsweb.main
-
-import grails.converters.JSON
-import net.ipc.utils.DateUtils
-
-class FacilityController {
-
-    def facilityService
-
-    def static DM_TR_FACILITY_MAPPING = [
-            "USD" : "FTF",
-            "PHP" : "FD5"
-    ]
-
-    def static FX_TR_FACILITY_MAPPING = [
-            "USD" : "FTF",
-            "PHP" : "FFT"
-    ]
-
-    def static IB_FACILITY_MAPPING = [
-            "USD" : "FBF",
-            "PHP" : "FFB"
-    ]
-
-    def static DB_FACILITY_MAPPING = [
-            "USD" : "FBF",
-            "PHP" : "FDB"
-    ]
-
-    def static UA_FACILITY_MAPPING = [
-            "PHP" : "FD3",
-            "USD" : "F3F",
-            "SGD" : "F3S",
-            "EUR" : "F3U",
-            "JPY" : "F3Y",
-            "AUD" : "F3Z",
-            "GBP" : "F3G",
-            "HKD" : "F3K",
-            "CHF" : "F3I"
-
-    ]
-
-    def static DBP_FACILITY_MAPPING = [
-            "PHP" : "FDB",
-            "USD" : "FBF"
-    ]
-
-    def static EBP_FACILITY_MAPPING = [
-            "USD" : ["FBE", "FEB"]
-    ]
-
-
-
-
-    def searchFacility() {
-        println "searchFacility"
-        def maxRows = params.int('rows') ?: 10
-        def currentPage = params.int('page') ?: 1
-        def rowOffset = currentPage == 1 ? 0 : (currentPage - 1) * maxRows
-
-        Map<String, Object> mapList = facilityService.findAllFacilityByCifNumber(maxRows, rowOffset, currentPage, params)
-
-        def totalRows = mapList.totalRows
-        def numberOfPages = Math.ceil(totalRows / maxRows)
-        def results = facilityService.constructFacilityGrid(mapList.display)
-
-        def jsonData = [rows: results, page: currentPage, records: totalRows, total: numberOfPages]
-        render jsonData as JSON
-    }
-
-    //TODO: REFACTOR ME!
-    def getEarmarkingFacilities(){
-         def facilities = getFacilitiesByCurrency(params?.cifNumber,params?.mainCifNumber,params?.seqNo,'FCN');
-        render facilities as JSON;
-    }
-
-    def getEarmarkingFacilitiesSearch(){
-        def facilities = getFacilitiesByCurrencySearch(params?.cifNumber, params?.mainCifNumber, params?.seqNo, 'FCN');
-        render facilities as JSON;
-    }
-
-    def getEarmarkingFacilitiesForUaSearch(){
-        println "getEarmarkingFacilitiesForUaSearch"
-        def facilities = getFacilitiesByCurrencySearch(params?.cifNumber, params?.mainCifNumber, params?.seqNo, UA_FACILITY_MAPPING[params.currency]);
-        render facilities as JSON;
-    }
-
-    def searchForLoanFacilities(){
-        def facilities = getFacilitiesByCurrencyAndTypes(params?.cifNumber,params?.mainCifNumber,params.currency,params.seqNo,params.facilityType);
-        render facilities as JSON;
-    }
-
-    def getTrFacilities(){
-        def facilityType;
-        if("DOMESTIC".equalsIgnoreCase(params.documentType)){
-            facilityType = DM_TR_FACILITY_MAPPING[params.currency];
-        }else if ("FOREIGN".equalsIgnoreCase(params.documentType)){
-            facilityType = FX_TR_FACILITY_MAPPING[params.currency];
-        }
-
-        def facilities = getFacilitiesByCurrencyAndTypes(params?.cifNumber,
-				params?.mainCifNumber,
-				params.currency,
-                params.seqNo,
-                facilityType);
-        render facilities as JSON;
-    }
-
-    def getDbpFacilities(){
-        def facilities = getFacilitiesByCurrencyAndTypes(params?.cifNumber,
-				params?.mainCifNumber,
-                params.currency,
-                params.seqNo,
-                DBP_FACILITY_MAPPING[params.currency]);
-//        def facilities = getFacilitiesByCurrency(params?.cifNumber,params.currency,"FFT","FTF","FD5","F3F","F3S","F3U","F3Y","F3Z","F3G","F3K","F3I");
-        render facilities as JSON;
-    }
-
-    def getEbpFacilities(){
-        def facilities = getFacilitiesByCurrencyAndTypes(params?.cifNumber,
-				params?.mainCifNumber,
-                params.currency,
-                params.seqNo,
-                params.facilityType);
-        render facilities as JSON;
-    }
-
-    def getFacilityBalance(){
-        render (facilityService.getFacilityBalance(params.balanceQueryRequestId) as JSON);
-    }
-
-    def getFacilityBalanceRequest(){
-        render (facilityService.getFacilityBalanceRequest(Long.valueOf(params.balanceQueryRequestId?.toString()), session?.etsModel?.serviceInstructionId) as JSON);
-    }
-
-
-
-    def getIBFacilities(){
-        boolean isForeign = (session.etsModel?.documentType?.equals("FOREIGN") ||
-                             session.dataEntryModel?.documentType?.equals("FOREIGN") ||
-                             session.chargesModel?.documentType?.equals("FOREIGN")) ?
-                            true :
-                            false
-
-        def facilities = getFacilitiesByCurrencyAndTypes(params.cifNumber,
-				params?.mainCifNumber,
-                params.currency,
-                params.seqNo,
-                isForeign ? IB_FACILITY_MAPPING[params.currency] : DB_FACILITY_MAPPING[params.currency],
-        );
-        render facilities as JSON;
-    }
-
-    def getUAFacilities(){
-        def facilities = getFacilitiesByCurrencyAndTypes(params.cifNumber,
-				params?.mainCifNumber,
-                params.currency,
-                params.seqNo,
-                UA_FACILITY_MAPPING[params.currency]);
-        render facilities as JSON;
-    }
-
-    private getFacilitiesByCurrency(String cifNumber,String mainCifNumber,String seqNo,String... facilityTypes){
-        def maxRows = params.int('rows') ?: 10
-        def currentPage = params.int('page') ?: 1
-        def rowOffset = currentPage == 1 ? 0 : (currentPage - 1) * maxRows
-
-        List<Map<String,Object>> facilities = facilityService.getFacilities(cifNumber,mainCifNumber,seqNo,facilityTypes);
-
-//        def results = facilityService.constructFacilityGrid(facilities,maxRows,rowOffset,currentPage);
-//        def jsonData = [rows : results, page : params.int('page') ?: 1, records:  facilities.size(), total : Math.ceil(facilities.size()/params.int('rows') ?: 10) ]
-        return facilityService.constructFacilityGrid(facilities,maxRows,rowOffset,currentPage);
-    }
-
-    private getFacilitiesByCurrencySearch(String cifNumber,
-										  String mainCifNumber,
-                                          String seqNo,
-                                          String... facilityTypes){
-        def maxRows = params.int('rows') ?: 10
-        def currentPage = params.int('page') ?: 1
-        def rowOffset = currentPage == 1 ? 0 : (currentPage - 1) * maxRows
-
-        List<Map<String,Object>> facilities = facilityService.getFacilitiesSearch(cifNumber,
-																			mainCifNumber,
-                                                                            seqNo,
-                                                                            facilityTypes);
-//        def results = facilityService.constructFacilityGrid(facilities,maxRows,rowOffset,currentPage);
-//        def jsonData = [rows : results, page : params.int('page') ?: 1, records:  facilities.size(), total : Math.ceil(facilities.size()/params.int('rows') ?: 10) ]
-        return facilityService.constructFacilityGrid(facilities,maxRows,rowOffset,currentPage);
-    }
-
-    private getFacilitiesByCurrencyAndTypes(String cifNumber,String mainCifNumber,String currency,String seqNo,String... facilityTypes){
-        def maxRows = params.int('rows') ?: 10
-        def currentPage = params.int('page') ?: 1
-        def rowOffset = currentPage == 1 ? 0 : (currentPage - 1) * maxRows
-
-        List<Map<String,Object>> facilities = facilityService.getFacilitiesByCifCurrencyAndTypes(cifNumber,
-				mainCifNumber,
-                currency,
-                seqNo ?: '',
-                facilityTypes);
-
-//        def results = facilityService.constructFacilityGrid(facilities,maxRows,rowOffset,currentPage);
-//        def jsonData = [rows : results, page : params.int('page') ?: 1, records:  facilities.size(), total : Math.ceil(facilities.size()/params.int('rows') ?: 10) ]
-        println 'facilityTypes ' + facilityTypes
-        return facilityService.constructFacilityGrid(facilities,maxRows,rowOffset,currentPage);
-    }
-
-    def searchTrLines() {
-
-        String trLines = facilityService.findTrLines(params)
-        render([trLines: trLines] as JSON)
-    }
-
-    def requestFacilityBalance(){
-        println params.facilityType
-        render facilityService.insertFacilityBalanceQuery(params.facilityId,params.facilityType,params.cifNumber) as JSON;
-    }
-
-    def inquireFacilityBalance(){
-        render facilityService.inquireFacilityBalance(session?.etsModel?.serviceInstructionId ?: params.serviceInstructionId) as JSON;
-    }
-
-
-    def getCurrentDate() {
-        render([currentSystemDate: DateUtils.shortDateFormat(new Date())] as JSON)
-    }
-}
diff --git a/grails-app/services/com/ucpb/tfsweb/main/FacilityService.groovy b/grails-app/services/com/ucpb/tfsweb/main/FacilityService.groovy
deleted file mode 100644
--- a/grails-app/services/com/ucpb/tfsweb/main/FacilityService.groovy
+++ /dev/null
@@ -1,163 +0,0 @@
-package com.ucpb.tfsweb.main
-
-import net.ipc.utils.NumberUtils
-import java.text.SimpleDateFormat
-import java.util.List;
-import java.util.Map;
-
-import org.apache.commons.lang.StringUtils
-
-/*
-	 (revision)
-	 SCR/ER Number: ER# 20170109-040
-	 SCR/ER Description: Transaction allowed to be created even the facility is expired
-	 [Revised by:] Jesse James Joson
-	 [Date revised:] 1/17/2017
-	 Program [Revision] Details: Check the expiry date of the facility before allowing to amend LC
-	 Member Type: Groovy
-	 Project: WEB
-	 Project Name: FacilityService.groovy
-*/
-
-class FacilityService {
-
-    def queryService
-    
-    def facilityFinder = com.ucpb.tfs.application.query.interfaces.FacilityService.class;
-    def coreAPIService;
-
-
-    Map<String, Object> findAllFacilityByCifNumber(maxRows, rowOffset, currentPage, params) {
-        String methodName = "getFacilitiesByCifNumber"
-
-        Map<String, Object> param = [cifNumber: params.cifNumber ?: ""]
-
-        List<Map<String, Object>> queryResult = queryService.executeQuery(facilityFinder, methodName, param)
-
-        Integer toIndex = ((currentPage * maxRows) < queryResult?.size()) ? (currentPage * maxRows) : queryResult?.size()
-        return [display: queryResult?.subList(rowOffset, toIndex), totalRows: queryResult?.size()]        
-    }
-
-    public List<Map<String,Object>> findAllFacilitiesByCifNumberAndType(String cifNumber, String facilityType){
-        return queryService.executeQuery(facilityFinder,"getFacilitiesByCifNumberAndType",[cifNumber : cifNumber ?: '', type : facilityType ?: '']);
-    }
-
-    def constructFacilityGrid(sourceList,maxRows, rowOffset, currentPage) {
-        Integer toIndex = ((currentPage * maxRows) < sourceList?.size()) ? (currentPage * maxRows) : sourceList?.size()
-
-        def display = sourceList?.subList(rowOffset, toIndex)?.collect {
-//            String date = convertDateString(it.EXPIRY_DATE.toString(),"MMddyy","MM/dd/yy");
-            [
-             id: it.FACILITY_REF_NUMBER,
-//             id: it.FACILITY_ID,
-                    cell:[
-                            it.FACILITY_ID,
-                            convertDateString(it.EXPIRY_DATE.toString(),"MMddyy","MM/dd/yyyy"), //it.AFEXP6
-                            it.FACILITY_CURRENCY ?: "",
-                            it.FACILITY_TYPE,
-                            it.FACILITY_REF_NUMBER,
-                            it.BALANCE_INQUIRY_ID
-                    ]
-            ]
-        }
-
-        int totalRows = sourceList?.size() ?: 0//display?.size() ?: 0
-
-        return [rows : display,
-            page : currentPage,
-            records : totalRows,
-            total : Math.ceil(totalRows / maxRows)
-        ]
-    }
-
-    private String convertDateString(String sourceDateString,String sourceFormat,String outputFormat){
-        SimpleDateFormat sourceDateFormat = new SimpleDateFormat(sourceFormat);
-        SimpleDateFormat outputDateFormat = new SimpleDateFormat(outputFormat);
-        return outputDateFormat.format(sourceDateFormat.parse(StringUtils.leftPad(sourceDateString,6,"0")));
-    }
-
-    String findTrLines(params) {
-		String methodName = "getFacilitiesByCifNumberAndFacilityTypes"
-
-        String[] facilityTypes = ['CLS', 'FFT', 'FTF']
-
-        Map<String, Object> param = [cifNumber: params.cifNumber ?: "",
-				mainCifNumber: params.mainCifNumber ?: "",
-				seqNo: "",
-                facilityTypes: facilityTypes]
-
-        List<Map<String, Object>> queryResult = queryService.executeQuery(facilityFinder, methodName, param)
-        def trLine = []
-
-        queryResult.each {
-            trLine << it.FACILITY_TYPE+it.FACILITY_ID
-        }
-
-        params.cifNumber
-        ////printlntrLine
-        return trLine?.toString()?.replace("[","")?.replace("]","")
-    }
-
-    def getFacilities(String cifNumber, String mainCifNumber, String seqNo, String... facilityTypes){
-        println "facilityService.getFacilities : facilityTypes >> " + facilityTypes
-        return queryService.executeQuery(facilityFinder, "getFacilitiesByCifNumberAndFacilityTypes", [cifNumber: cifNumber ?: '',
-				mainCifNumber: mainCifNumber ?: '',
-                seqNo: seqNo ?: '',
-                facilityTypes: facilityTypes ?: '']);
-    }
-
-    def getFacilitiesSearch(String cifNumber,
-							String mainCifNumber,
-                            String seqNo,
-                            String... facilityTypes){
-        println "facilityService.getFacilitiesSearch : facilityTypes >> " + facilityTypes
-        return queryService.executeQuery(facilityFinder, "getFacilitiesByCifNumberAndFacilityTypesSearch", [cifNumber: cifNumber,
-				mainCifNumber: mainCifNumber ?: '',
-                seqNo: seqNo,
-                facilityTypes: facilityTypes]);
-    }
-
-    def getFacilitiesByCifCurrencyAndTypes(String cifNumber,String mainCifNumber,String currency,String seqNo, String... facilityTypes){
-        println "\n\nfacilityService.getFacilitiesByCifCurrencyAndTypes : facilityTypes >> " + facilityTypes
-        println "cifNumber >> " + cifNumber
-        println "mainCifNumber >> " + mainCifNumber
-        println "currency >> " + currency
-        println "seqNo >> " + seqNo
-
-        return queryService.executeQuery(facilityFinder, "getFacilitiesByCifCurrencyAndFacilityTypes",
-                [cifNumber: cifNumber,
-                 mainCifNumber: mainCifNumber,
-                 currency : currency,
-                 seqNo : seqNo ?: '',
-                 facilityTypes: facilityTypes]);
-    }
-
-    def getFacilityBalance(String balanceQueryId){
-        List<Map<String,Object>> result = queryService.executeQuery(facilityFinder, "getFacilityBalance", [transactionSequenceNumber: balanceQueryId ? Long.valueOf(balanceQueryId) : ""]);
-        if(!result.isEmpty()){
-            return result.get(0);
-        }
-        return new HashMap<String,Object>();
-    }
-
-    def insertFacilityBalanceQuery(String facilityId, String facilityType, String cifNumber){
-        def parameters = [facilityId : facilityId, facilityType : facilityType, cifNumber: cifNumber];
-
-        def result = coreAPIService.dummySendCommand(parameters, "insertBalance","facility/");
-        return result
-    }
-
-    def getFacilityBalanceRequest(Long transactionNumber, String etsNumber){
-        return coreAPIService.dummySendCommand([transactionSequenceNumber: transactionNumber, etsNumber: etsNumber],"getBalance","facility/");
-    }
-
-    def inquireFacilityBalance(String etsNumber){
-        return coreAPIService.dummySendCommand([etsNumber : etsNumber],"inquireBalance","facility/");
-    }
-
-	def getFacilitiesByCifAndFacility(String cifNumber, String facilityRefNo, String facilityType, String facilityId) {
-		return queryService.executeQuery(facilityFinder,"getFacilitiesByCifAndFacility",[cifNumber : cifNumber , facilityRefNo : facilityRefNo , facilityType : facilityType , facilityId : facilityId]);
-			
-	}
-
-}
diff --git a/grails-app/views/batch/index.gsp b/grails-app/views/batch/index.gsp
deleted file mode 100644
--- a/grails-app/views/batch/index.gsp
+++ /dev/null
@@ -1,1028 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
-<html xmlns="http://www.w3.org/1999/xhtml">
-
-
- <!-- •••••• 
- 
-  *(revision)
-    SCR/ER Number: 
-    SCR/ER Description: 
-    [Revised by:] Allan Comboy Jr.
-    [Date Deployed:] 06/07/2016
-    Program [Revision] methods to check Sibs
-    PROJECT: WEB
-    MEMBER TYPE  : gsp
-    Project Name: index
- 
- 
- -->
-  <!-- •••••• 
- 
-  *(revision)
-    SCR/ER Number: 20160623-080
-    SCR/ER Description: Program abnormally terminates during SIBS DB access time-out.
-    [Revised by:] Allan Comboy Jr.
-    [Date Deployed:] 06/24/2016
-    Program [Revision] for CREDEX and FORM4
-    PROJECT: WEB
-    MEMBER TYPE  : gsp
-    Project Name: index
- 
- 
- -->
- 
- <!--
- 
- *  (revision)
-    SCR/ER Number: ER# 20140909-038
-    SCR/ER Description: CIF Normalization Not Working in TFS
-    [Revised by:] Jesse James Joson
-    [Date Created:] 08/05/2016
-    Program [Revision] Details: The CIF Normalization was redesigned, since not all tables are normalized. Add method for the CIF Extraction.
-    PROJECT: WEB
-    MEMBER TYPE  : GSP
-    Project Name: index
- 
- 
- -->
- 
-<!--
- 
- *  (revision)
-    SCR/ER Number: SCR# IBD-16-0615-01
-    SCR/ER Description: To comply with the requirement for CIF archiving/purging of inactive accounts in TFS.
-    [Revised by:] Jesse James Joson
-    [Date Revised:] 09/22/2016
-    Program [Revision] Details: Create UI for the execution of account purging and the timer.
-    PROJECT: WEB
-    MEMBER TYPE  : GSP
-    Project Name: index
- 
- -->
- 
- <!--
- 
- *  (revision)
-    SCR/ER Number: ER# 20160930-135
-    SCR/ER Description: To add the deleted part from the last deployment 
-    [Revised by:] Jesse James Joson
-    [Date Revised:] 10/5/2016
-    Program [Revision] Details: Insert the deleted line.
-    PROJECT: WEB
-    MEMBER TYPE  : GSP
-    Project Name: index
- 
- -->
- 
- <!--
- 
- *  (revision)
-    [Revised by:] Rafael T. Poblete
-    [Date Revised:] 06/20/2018
-    Program [Revision] Details: Added ITRS Report and Exception to screen.
-    PROJECT: WEB
-    MEMBER TYPE  : GSP
-    Project Name: index
- 
- -->
-  <!--
- 
- *  (revision)
-    [Revised by:] Prochina, Daniel Jericho B.
-    [Date Revised:] 06/21/2018
-    Program [Revision] Details: Added ITRS Interface.
-    PROJECT: WEB
-    MEMBER TYPE  : GSP
-    Project Name: index
- 
- -->
-
-   <!--
- 
- *  (revision)
-    [Revised by:] Prochina, Crystiann Puso
-    [Date Revised:] 02/23/2024
-    Program [Revision] Details: Added Process Cicls and Generate Cicls File Interface.
-    PROJECT: WEB
-    MEMBER TYPE  : GSP
-    Project Name: index
- 
- -->
- 
-  <head>
-    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
-    <meta name="layout" content="admin" />
-    <%@ page import="net.ipc.utils.DateUtils" %>
-    <title>Trade Finance System</title>
-    
-      
-    <style type="text/css">
-.modalDialog {
-    position: fixed;
-    font-family: Arial, Helvetica, sans-serif;
-    top: 0;
-    right: 0;
-    bottom: 0;
-    left: 0;
-    background: rgba(0, 0, 0, 0.8);
-    z-index: 99999;
-    opacity:0;
-    -webkit-transition: opacity 400ms ease-in;
-    -moz-transition: opacity 400ms ease-in;
-    transition: opacity 400ms ease-in;
-    pointer-events: none;
-}
-.modalDialog:target {
-    opacity:1;
-    pointer-events: auto;
-}
-.modalDialog > div {
-    width: 300px;
-    position: relative;
-    margin: 10% auto;
-    padding: 5px 20px 13px 20px;
-    border-radius: 10px;
-    background: #fff;
-    background: -moz-linear-gradient(#fff, #999);
-    background: -webkit-linear-gradient(#2DAAE0, #2DAAE0);
-    background: -o-linear-gradient(#fff, #999);
-}
-.close {
-    background: #606061;
-    color: #FFFFFF;
-    line-height: 25px;
-    position: absolute;
-    right: -12px;
-    text-align: center;
-    top: -10px;
-    width: 24px;
-    text-decoration: none;
-    font-weight: bold;
-    -webkit-border-radius: 12px;
-    -moz-border-radius: 12px;
-    border-radius: 12px;
-    -moz-box-shadow: 1px 1px 3px #000;
-    -webkit-box-shadow: 1px 1px 3px #000;
-    box-shadow: 1px 1px 3px #000;
-}
-.close:hover {
-    background: #00d9ff;
-}
-
-
-
-
-
-#loader {
-    position:relative;
-    width:150px;
-    height:19px
-}
-
-.loader {
-    position:absolute;
-    top:0;
-    background-color:#878787;
-    width:19px;
-    height:19px;
-    -moz-animation-name:bounce_loader;
-    -moz-animation-duration:1.4s;
-    -moz-animation-iteration-count:infinite;
-    -moz-animation-direction:linear;
-    -moz-transform:scale(.3);
-    -webkit-animation-name:bounce_loader;
-    -webkit-animation-duration:1.4s;
-    -webkit-animation-iteration-count:infinite;
-    -webkit-animation-direction:linear;
-    -webkit-transform:scale(.3);
-    -ms-animation-name:bounce_loader;
-    -ms-animation-duration:1.4s;
-    -ms-animation-iteration-count:infinite;
-    -ms-animation-direction:linear;
-    -ms-transform:scale(.3);
-    -o-animation-name:bounce_loader;
-    -o-animation-duration:1.4s;
-    -o-animation-iteration-count:infinite;
-    -o-animation-direction:linear;
-    -o-transform:scale(.3);
-    animation-name:bounce_loader;
-    animation-duration:1.4s;
-    animation-iteration-count:infinite;
-    animation-direction:linear;
-    transform:scale(.3);
-}
-
-#loader_1 {
-    left:0;
-    -moz-animation-delay:0.56s;
-    -webkit-animation-delay:0.56s;
-    -ms-animation-delay:0.56s;
-    -o-animation-delay:0.56s;
-    animation-delay:0.56s;
-}
-
-#loader_2 {
-    left:30px;
-    -moz-animation-delay:0.7s;
-    -webkit-animation-delay:0.7s;
-    -ms-animation-delay:0.7s;
-    -o-animation-delay:0.7s;
-    animation-delay:0.7s;
-}
-
-#loader_3 {
-    left:60px;
-    -moz-animation-delay:0.84s;
-    -webkit-animation-delay:0.84s;
-    -ms-animation-delay:0.84s;
-    -o-animation-delay:0.84s;
-    animation-delay:0.84s;
-}
-
-#loader_4 {
-    left:90px;
-    -moz-animation-delay:0.98s;
-    -webkit-animation-delay:0.98s;
-    -ms-animation-delay:0.98s;
-    -o-animation-delay:0.98s;
-    animation-delay:0.98s;
-}
-
-#loader_5 {
-    left:120px;
-    -moz-animation-delay:1.12s;
-    -webkit-animation-delay:1.12s;
-    -ms-animation-delay:1.12s;
-    -o-animation-delay:1.12s;
-    animation-delay:1.12s;
-}
-
-#loader_6 {
-    left:150px;
-    -moz-animation-delay:1.26s;
-    -webkit-animation-delay:1.26s;
-    -ms-animation-delay:1.26s;
-    -o-animation-delay:1.26s;
-    animation-delay:1.26s;
-}
-
-#loader_7 {
-    left:180px;
-    -moz-animation-delay:1.4s;
-    -webkit-animation-delay:1.4s;
-    -ms-animation-delay:1.4s;
-    -o-animation-delay:1.4s;
-    animation-delay:1.4s;
-}
-
-#loader_8 {
-    left:210px;
-    -moz-animation-delay:1.54s;
-    -webkit-animation-delay:1.54s;
-    -ms-animation-delay:1.54s;
-    -o-animation-delay:1.54s;
-    animation-delay:1.54s;
-}
-
-@-moz-keyframes bounce_loader {
-    0% { -moz-transform:scale(1); background-color:#99d6ff; }
-    100% { -moz-transform:scale(.3); background-color:#e6f2ff; }
-}
-
-@-webkit-keyframes bounce_loader {
-    0% { -webkit-transform:scale(1); background-color:#99d6ff; }
-    100% { -webkit-transform:scale(.3); background-color:#e6f2ff; }
-}
-
-@-ms-keyframes bounce_loader {
-    0% { -ms-transform:scale(1); background-color:#99d6ff; }
-    100% { -ms-transform:scale(.3); background-color:#e6f2ff; }
-}
-
-@-o-keyframes bounce_loader {
-    0% { -o-transform:scale(1); background-color:#99d6ff; }
-    100% { -o-transform:scale(.3); background-color:#AD4725; }
-}
-
-@keyframes bounce_loader {
-    0% { transform:scale(1); background-color:#99d6ff; }
-    100% { transform:scale(.3); background-color:#e6f2ff; }
-}
-</style>  
-    
-    
-    
-    <style type="text/css">
-        .duration {font-size: 18px; font-weight: bold; color:#000040;}
-        .big_label_red {font-size: 18px; font-weight: bold; color: red}
-        .batch_button {background: url(../images/button_affirmative_b.png) no-repeat; width: 64px; border: none; font-size: 12px !important; font-weight: bold; margin: 1px 0.5em; padding: 0 0 2px 15px; text-align: left; height: 21px; color: #ffffff;}
-        .batch_button:HOVER {background-position: 0 -21px;}
-        .batch_button:ACTIVE {background-position: 0 -42px;}
-        span#welcome{font-size:1.2em;font-weight:bold;}
-        .failed{color:red;font-weight:bold;}
-        .success{color:green;font-weight:bold;}
-        .warning{color:orange;font-weight:bold;}
-        div.duration_category>label{font-size: 13px; font-weight: bold;padding-left:1em;}
-        div.duration_category span{font-style:italic;padding-left:1.5em;display:block;}
-        select#adhoc_dropdown {border: 1px solid #00aeef;margin-left:1em;display:block;}
-        select#adhoc_dropdown optgroup{font-weight:bold;font-style:normal;}
-        select#adhoc_dropdown option{padding-left:1em;font-style:italic}
-        form#batch_form *{font-size:14px;}
-        fieldset{padding:0.5em 1em; border-radius:0px; border: 1px solid black;}
-        label.time-format{padding-left:2em;color:blue; font-size: 12px; font-weight:bold;}
-        label.adhocLabel{color:blue; font-size: 12px; font-weight:bold; display:block; padding:0.5em 0;}
-    </style>
-  
-    <script>
-        var interfaceAmlaUrl = '${g.createLink(controller:'batch', action:'interfaceAmlaFiles')}';
-        var interfaceUrl = '${g.createLink(controller:'batch', action:'interfaceFiles')}';
-        var glisUrl = '${g.createLink(controller:'batch', action:'glis')}';
-        var ciclsUrl = '${g.createLink(controller:'batch', action:'cicls')}';
-        var reRouteApproverUrl = '${g.createLink(controller:'batch', action:'rerouteTradeServiceJob')}';
-        var cifNormalizationUrl = '${g.createLink(controller:'batch', action:'cifNormalization')}';
-        var currentTimeUrl = '${g.createLink(controller:'batch', action:'jsonCurrentTime')}';
-        var batchReportUrl = '${g.createLink(base:grailsApplication.config.tfs.report.location.base, controller:'genericReports', action:'getJSONBatch')}';
-        var specialMcoUrl = '${g.createLink(base:grailsApplication.config.tfs.report.location.base, controller:'genericReports', action:'runSpecialMco')}';
-        var batchReportIndividualUrl = '${g.createLink(base:grailsApplication.config.tfs.report.location.base, controller:'genericReports', action:'runIndividualReport')}';
-        var sibsfromGenericReport = '${g.createLink(base:grailsApplication.config.tfs.report.location.base, controller:'genericReports', action:'testCall')}';               <!-- ER# 20160930-135 -->
-        var cifNormalizationUrl = '${g.createLink(controller:'batch', action:'cifNormalization')}';
-        var cifNormalizationUrl2 = '${g.createLink(controller:'batch', action:'cifNormalization2')}';
-        var afterReportInterfaceUrl = '${g.createLink(controller:'batch', action:'afterReportInterface')}';
-        var cifPurgingUrl = '${g.createLink(controller:'batch', action:'cifPurging')}';
-        var sibsInterfaceUrl = '${g.createLink(controller:'batch', action:'sibsInterfaceFiles')}';
-        var cicInterfaceUrl = '${g.createLink(controller:'batch', action:'cicInterfaceFiles')}';
-        var cicInterfaceUrl2 = '${g.createLink(controller:'batch', action:'cicInterfaceFiles2')}';
-        var yearEndInterfaceUrl = '${g.createLink(controller:'batch', action:'yearEndInterfaceFiles')}';
-        var yearEndHolidaysUrl = '${g.createLink(controller:'batch', action:'yearEndHolidays')}';
-        var cifPurgingInterfaceUrl = '${g.createLink(controller:'batch', action:'cifPurgingInterfaceFiles')}';
-
-        var cifPurgingInterfaceUrl2 = '${g.createLink(controller:'batch', action:'cifPurgingInterfaceFiles2')}';
-        var cifPurgingInterfaceUrl3 = '${g.createLink(controller:'batch', action:'cifPurgingInterfaceFiles3')}';
-        
-        var populateCasaAccountsUrl = '${g.createLink(controller:'batch', action:'populateCasaAccounts')}';
-        var masterExceptionUrl = '${g.createLink(controller:'batch', action:'masterException')}';
-        var allocationExceptionUrl = '${g.createLink(controller:'batch', action:'allocationException')}';
-        var allocationUrl = '${g.createLink(controller:'batch', action:'allocation')}';
-
-        var updateAllocationUrl = '${g.createLink(controller:'batch', action:'updateAllocation')}';
-
-        var dailyItrsUrl = '${g.createLink(controller:'batch', action:'executeDailyItrs')}';
-        var interfaceDirectoriesUrl = '${g.createLink(controller:'batch', action:'retrieveInterfaceDirectories')}';
-
-        var sysDate = new Date('${DateUtils.shortDateFormat(new Date())}');
-        var year = sysDate.getFullYear();
-        var month = sysDate.getMonth();
-        var day = sysDate.getDate();
-        var currentDate = (month+1) + '/' + day + '/' + year;
-        //TODO: change these vars (hardcoded) (!-_-)
-        var branchUnitCode = '909';
-        var branchUnitName = 'TRADE SERVICES DEPARTMENT';
-        var fieldIdToChangeTime="";
-        var adHocReportStatus="";
-    </script>
-    <g:javascript src="pop_up.js"/>
-
-</head>
-<body style="visibility: hidden;">
-
-
-
-
-
-    <div id="outer_wrap">
-
-
-<a href="#openModal" id="startCnt"></a>
-<div id="openModal" class="modalDialog">
-    <div>   
-    <a href="#close" title="Close" class="close" id="closeModal"></a>
-
-    <h2>SIBS Disconnection Error</h2>
-
-        <p id="msg">Preparing to connect</p>
-        <p id="attemptCnt"></p>
-        <p> 
-            <div id="loader">
-    
-                <div id="loader_1" class="loader"></div>
-                <div id="loader_2" class="loader"></div>
-                <div id="loader_3" class="loader"></div>
-                <div id="loader_4" class="loader"></div>
-                <div id="loader_5" class="loader"></div>
-    
-            </div> 
-
-        </p>
- 
-    </div>
-</div>
-
-<a href="#openModal2" id="startCnt2"></a>
-<div id="openModal2" class="modalDialog">
-    <div>   
-    <a href="#close2" title="Close" class="close" id="closeModal2"></a>
-
-    <h2>Account purging timer...</h2>
-
-        <p id="msg2">Runtime: </p>
-        <p id="attemptCnt"></p>
-        <p> 
-            <div id="loader">
-    
-                <div id="loader_1" class="loader"></div>
-                <div id="loader_2" class="loader"></div>
-                <div id="loader_3" class="loader"></div>
-                <div id="loader_4" class="loader"></div>
-                <div id="loader_5" class="loader"></div>
-    
-            </div> 
-
-        </p>
- 
-    </div>
-</div>
-
-
-
-
-
-        <%-- HEADER --%>
-        <g:render template="/layouts/header"/>
-
-        <div id="navigation">
-            <div id="Accordion1" class="Accordion">
-                <div class="AccordionPanel">
-                    <div class="AccordionPanelTab panelHome" id="accordpanel_home">Batch Execution Home</div>
-                    <div class="AccordionPanelContent">
-                        <ul>
-                            <li><a href="<g:createLink controller="batch"/>">Batch Execution</a></li>
-                            <li><a href="<g:createLink controller="logout"/>">Login Status</a></li>
-                            
-                        </ul>
-                    </div>
-                </div>
-            </div>
-        </div>
-        <div id="body_forms">
-            <span id="welcome">Manual Batch Execution Module</span>
-            <br/><br/>
-            <form action="index.gsp" id="batch_form">
-                <fieldset id="dailyInterfaces">
-                    <label class="duration">Daily</label>
-                    <div id="special" class="duration_category">
-                        <label>CIF Normalization</label> 
-                        <input type="button" class="batch_button" value="Execute" id="executeCifNormalization"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>CIF Normalization</span>
-                    </div>
-                    <div id="updateAllocationUnitCode" class="duration_category">
-                        <label>Update Allocation Unit Code</label>
-                        <input type="button" class="batch_button" value="Execute" id="executeUpdateAllocationUnitCode"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Update Allocation Unit Code</span>
-                    </div>
-                    <div id="specialPopulateCasaAccounts" class="duration_category">
-                        <label>Populate CASA Accounts</label>
-                        <input type="button" class="batch_button" value="Execute" id="executePopulateCasaAccounts"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Populate CASA Accounts</span>
-                    </div>
-                    <div id="sibsInterface" class="duration_category">
-                        <label>Extract SIBS GL Accounts</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateSibsInterface"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Extract SIBS GL Accounts</span>
-                    </div>  
-                    <div id="DailySummaryOfDW" class="duration_category">
-                        <label>Summary of DW</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateDailySummaryOfDW"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Daily_Master_GL_Summary.xls</span>
-                        <span>Daily_Master_GL_DailyBalance_Summary.xls</span>
-                       
-                    </div> 
-                    <div id="updateTransactionRoutingDiv" class="duration_category">
-                        <label>Update Transaction Routing</label>
-                        <input type="button" class="batch_button" value="Execute" id="updateTransactionRouting"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Update Transaction Routing</span>
-                    </div>
-                    <div id="glisDiv" class="duration_category">
-                        <label>GLIS Hand-Off File</label>
-                        <input type="button" class="batch_button" value="Execute" id="generateGlis"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>GLIS Hand-Off File</span>
-                    </div>
-                    <div id="ciclsDiv" class="duration_category">
-                        <label>CICLS Hand-Off File</label>
-                        <input type="button" class="batch_button" value="Execute" id="generateCicls"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Process CICLS Records</span>
-                        <span>Generate CICLS Hand-Off File</span>
-                    </div>
-                    
-                    <div id="interface" class="duration_category">
-                        <label>Before-Report Interfaces</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateDailyInterface"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Amla Expire LC</span>
-                        <span>Synchronize Routing Status</span>
-                        <span>Abort Pending ETS Reversal</span>
-<%--                        <span>Revert Data Entry to Pending</span>--%>
-                        <span>Purge Unapproved ETS</span>
-                        <span>Tag As Pending</span>
-                        <span>Revert e-TS to Pending</span>
-<%--                        uncomment this when for revision of Sec_employee_audit--%>
-<%--                        <span>Purge SEC_EMPLOYEE_AUDIT</span>--%>      
-                        <span>GL Movement</span>
-                        <span>CIF Purging</span>
-                        <span>Process Rma Document</span>
-                        
-                    </div>
-                    
-                     <div id="interfaceDailyAmla" class="duration_category">
-                        <label>AMLA Interfaces</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateDailyAmlaInterface"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>AMLA Transaction</span>
-                        <span>AMLA Account</span>
-                        <span>AMLA Customer Account</span>
-                        <span>AMLA Customer</span>
-
-                    </div>
-                    
-                     <div id="dailyItrs" class="duration_category">
-                        <label>ITRS Interface</label> 
-                        <input type="button" class="batch_button" value="Execute" id="executeDailyItrs"/>
-                        <label id="start" class="time-format"></label>
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>ITRS Interface</span>
-                    </div>
-                    
-                     <div id="itrs" class="duration_category">
-                        <label>ITRS Reports and Exceptions</label> 
-                        <input type="button" class="batch_button" value="Execute" id="executeDailyItrsReport"/>
-                        <label id="start" class="time-format"></label>
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>ITRS Schedule 2.pdf</span>
-                        <span>ITRS Schedule 2 Exception.xls</span>
-                        <span>ITRS Schedule 3.pdf</span>
-                        <span>ITRS Schedule 3 Exception.xls</span>
-                        <span>ITRS Schedule 4.pdf</span>
-                        <span>ITRS Schedule 4 Exception.xls</span>
-                    </div>
-                                    
-                    <div id="daily" class="duration_category">
-                        <label>Batch Reports</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateDailyBatchReports"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Consolidated_Daily_Report_on_Deposits_Collected.pdf</span>
-                        <span>Consolidated_Daily_Report_on_Deposits_Collected_2.pdf</span>
-                        <span>Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies.pdf</span>
-                        <span>Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies_2.pdf</span>
-                        <span>Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies_3.pdf</span>
-                        <span>Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies_4.pdf</span>
-                        <span>Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies_5.pdf</span>
-                        <span>Consolidated_Report_On_Daily_Collections_Of_Export_Documentary_Stamp_Fees.pdf</span>
-                        <span>Consolidated_Report_On_Daily_Collections_Of_Export_Documentary_Stamp_Fees_2.pdf</span>
-                        <span>Consolidated_Report_on_Daily_Collections_of_Import_Processing_Fees.pdf</span>
-                        <span>Consolidated_Report_on_Daily_Collections_of_Import_Processing_Fees_2.pdf</span>
-                        <span>Daily_Exception_Report_of_Accounting_Entries.pdf</span>
-                        <span>Daily_Foreign_Cash_LCs_Opened.pdf</span>
-                        <span>Daily_Foreign_LCs_Opened_Report_with_CDT_Details.pdf</span>
-                        <span>Daily_Foreign_Regular_LCs_Opened.pdf</span>
-                        <span>Daily_Funding.pdf</span>
-                        <span>Daily_Outstanding_Foreign_LCs.pdf</span>
-                        <span>Daily_Outstanding_LCs_CCBD_Report.pdf</span>
-                        <span>Daily_Report_on_Processed_Refund_2.pdf</span>
-                        <span>Daily_Summary_of_Accounting_Entries.pdf</span>
-
-                        <%-- FX Form 1 Reports--%>
-                        <%--                                  
-                        <span>Schedule_7.xls</span>
-                        <span>TRD07.txt</span>
-                        --%>
-<%--                        <span>Schedule_3.pdf</span>--%>
-<%--                        <span>Schedule_4.pdf</span> --%>
-                        <span>Schedule_5.pdf</span>
-                        <span>Schedule_9.pdf</span>
-                        <span>Schedule_10.pdf</span>
-                        <span>Schedule_11.pdf</span>
-<%--                        <span>TRD03</span>--%>
-<%--                        <span>LOANSRVD.DBF</span>--%>
-                        <span>CURRENTC.DBF</span>
-                        
-                        <%-- comment below TRD09, TRD10, TRD11 if GLFX Form 1 Output will be DBF--%>
-                        <span>TRD09</span>
-                        <span>TRD10</span>
-                        <span>TRD11</span>
-                        
-                        <%-- comment below EXPORTB.DBF, LCDONEWB.DBF, IMPNEWB.DBF if GLFX Form 1 Output will be DBF--%>
-<%--                        <span>EXPORTB.DBF</span>--%>
-<%--                        <span>LCDONEWB.DBF</span>--%>
-<%--                        <span>IMPNEWB.DBF</span>--%>
-                                                
-                        <span>TFS_CASA_Posting_Report_All.pdf</span>
-                        <span>Trade_Services_AMLA_Reported_Transactions.pdf</span>
-                        <span>TRAMS.csv</span>                     
-                    </div>
-                    <div id="afterReportInterface" class="duration_category">
-                        <label>After-Report Interfaces</label>
-                        <input type="button" class="batch_button" value="Execute" id="executeAfterReportInterface"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Balance</span>
-                        <span>Master File</span>
-                        <span>Master Exception Report</span>
-                        <span>DW Parameter</span>
-                        <span>CBR Parameter</span>
-                        <span>GL Parameter</span>
-                        <span>Process Revalue</span>
-                    </div>
-                </fieldset>
-                <br/>
-                <fieldset id="weeklyReports">
-                    <label class="duration">Weekly</label>
-                    <div id="weekly" class="duration_category">
-                        <label>Batch Reports</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateWeeklyBatchReports"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Weekly_Schedule_of_Doc_Stamps_108.csv</span>
-                        <span>Weekly_Schedule_of_Doc_Stamps_113.csv</span>
-                        <span>Weekly_Schedule_of_Doc_Stamps_TR.csv</span>
-                        <span>Weekly_Foreign_Domestic_LCs_Opened.csv</span>
-                        <span>Weekly_Report_on_Maturing_Usance_LCs.pdf</span>                       
-                    </div>
-                </fieldset>
-                <br/>
-                <fieldset id="monthlyReports">
-                    <label class="duration">Monthly</label>
-                    <div id="refBankDiv" class="duration_category">
-                        <label>Process Ref Banks</label>
-                        <input type="button" class="batch_button" value="Execute" id="processRefBank"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Process Ref Banks</span>
-                    </div>
-                    <div id="allocationFileDiv" class="duration_category">
-                        <label>Allocation File</label>
-                        <input type="button" class="batch_button" value="Execute" id="executeAllocationFile"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Allocation File</span>
-                        <span>Allocation Exception Report</span>
-                    </div>
-                    <div id="cicInterface" class="duration_category">
-                        <label>CIC Report</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateCicInterface"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>CIC Report</span>
-                    </div> 
-                    <div id="specialCloneLnappf" class="duration_category">
-                        <label>Clone LNAPPF</label>
-                        <input type="button" class="batch_button" value="Execute" id="executeCloningLnappf"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Clone LNAPPF</span>
-                    </div>
-                    <div id="monthEndMcoDiv" class="duration_category">
-                        <label>Month End MCO Report</label>
-                        <input type="button" class="batch_button" value="Execute" id="generateMonthEndMco"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Tfs_Mco_Report.xls</span>
-                    </div>
-                    <div id="specialMcoDiv" class="duration_category">
-                        <label>Second Banking Day MCO Report</label>
-                        <input type="button" class="batch_button" value="Execute" id="generateSpecialMco"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Tfs_Mco_Report.xls</span>
-                    </div>
-                    <div id="monthly" class="duration_category">
-                        <label>Batch Reports</label> <input type="button" class="batch_button" value="Execute" id="generateMonthlyBatchReports"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Collected_2%_CWT.pdf</span>
-                        <span>Consolidated_Report_on_Domestic_LCs_Opened_for_the_Month.pdf</span>
-                        <span>Consolidated_Report_on_Foreign_LCs_Opened_for_the_Month.pdf</span>
-                        <span>Customs_Duties_And_Taxes_And_Other_Levies.pdf</span>
-                        <span>Dm_Non_Lcs_Negotiated_For_The_Year_Classified_By_Top_30_Importer_And_Other_Local_Bank.pdf</span>
-                        <span>Domestic_LCs_Opened_for_the_Month.pdf</span>
-                        <span>Export_Negotiations_for_the_Month_per_Client.pdf</span>
-                        <span>Export_Negotiations_per_Collecting_Bank.pdf</span>
-                        <span>Export_Payments_for_the_Month_per_Client.pdf</span>
-                        <span>Foreign_LCs_Opened_for_the_Month.pdf</span>
-                        <span>Fx_Non_Lcs_Negotiated_For_The_Year_Classified_By_Top_30_Importer_And_Remitting_Bank.pdf</span>
-                        <span>List of Transactions With No CIF Number.xls</span>
-                        <span>Monthly_Transaction_Count.pdf</span>
-                        <span>Outstanding_Bank_Guaranty.pdf</span>
-                        <span>Outstanding_Domestic_Cash_LCs_Per_Currency.pdf</span>
-                        <span>Outstanding_Domestic_Cash_LCs_Per_Importer.pdf</span>
-                        <span>Outstanding_Domestic_Sight_LCs_Per_Currency.pdf</span>
-                        <span>Outstanding_Domestic_Sight_LCs_Per_Importer.pdf</span>
-                        <span>Outstanding_Domestic_Standby_LCs_Per_Currency.pdf</span>
-                        <span>Outstanding_Domestic_Standby_LCs_Per_Importer.pdf</span>
-                        <span>Outstanding_Domestic_Usance_LCs_Per_Currency.pdf</span>
-                        <span>Outstanding_Domestic_Usance_LCs_Per_Importer.pdf</span>                       
-                        <span>Outstanding_Export_Negotiations_Domestic.pdf</span>
-                        <span>Outstanding_Export_Negotiations_Foreign.pdf</span>                       
-                        <span>Outstanding_Foreign_Cash_LCs_per_Currency.pdf</span>
-                        <span>Outstanding_Foreign_Cash_LCs_per_Importer2.pdf</span>
-                        <span>Outstanding_Foreign_Sight_LCs_per_Currency.pdf</span>
-                        <span>Outstanding_Foreign_Sight_LCs_per_Importer.pdf</span>
-                        <span>Outstanding_Foreign_Standby_LCs_per_Currency.pdf</span>
-                        <span>Outstanding_Foreign_Standby_LCs_per_Importer.pdf</span>
-                        <span>Outstanding_Foreign_Usance_LCs_per_Currency.pdf</span>
-                        <span>Outstanding_Foreign_Usance_LCs_per_Importer.pdf</span>
-                        <span>Outstanding_Inward_Bills_For_Collection_Dm_Dp_Per_Currency.pdf</span>
-                        <span>Outstanding_Inward_Bills_For_Collection_Fx_Da_Dp_Oa_Dr_Per_Currency.pdf</span>
-                        <span>Outstanding_Inward_Bills_for_Collection_FXLC_per_Currency.pdf</span>
-                        <span>Outstanding_Inward_Bills_for_Collection_DMLC_per_Currency.pdf</span>
-                        <span>Outstanding_Marginal_Deposits.pdf</span>
-                        <span>Product_Availments_Exception_Report.xls</span>
-                        <span>Product_Availments_Report.xls</span>
-                        <span>Profitability_Monitoring_Exception_Report.xls</span>
-                        <span>Profitability_Monitoring_Report.xls</span>
-                        <span>Volumetrics_Report.pdf</span>
-                        <span>YTD_Report_on_Domestic_LCs_Opened.pdf</span>
-                        <span>YTD_Report_on_Domestic_LCs_Opened_Classified_by_top_30_Importer_and_Advising_Local_Bank_in_PHP.pdf</span>
-                        <span>YTD_Report_on_Foreign_LCs_Opened.pdf</span>
-                        <span>YTD_Report_on_Foreign_LCs_Opened_Classified_by_top_30_Importer_and_Advising_Bank_in_USD.pdf</span>
-                        <span>EXPOSURE_UPLOAD_TF.xls</span>
-                    </div>
-                </fieldset>
-                <br/>
-                <fieldset id="quarterlyReports">
-                    <label class="duration">Quarterly</label>
-                    <div id="quarterly" class="duration_category">
-                        <label>Batch Reports</label> <input type="button" class="batch_button" value="Execute" id="generateQuarterlyBatchReports"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>AP_Others.pdf</span>
-                        <span>AR_Others.pdf</span>
-                        <span>CREDEX_Report.pdf</span>
-                        <span>FORM4.xls</span>
-                        <span>Quarterly_Report_on_Foreign_Standby_LCs_Opened.pdf</span>
-                    </div>
-                </fieldset>
-                <br/>
-                <fieldset id="yearlyReports">
-                    <label class="duration">Yearly</label>
-                    <div id="yearly" class="duration_category">
-                        <label>Batch Reports</label> <input type="button" class="batch_button" value="Execute" id="generateYearlyBatchReports"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <br/>
-                        <span>Year_End_Report_on_Foreign_LCS_Opened_per_Advising_Bank.pdf</span>
-                        <span>Year_End_Report_on_Foreign_LCS_Opened_per_Confirming_Bank.pdf</span>
-                        <span>Year_End_Report_on_Foreign_LCS_Opened_per_Country.pdf</span>
-                        <span>YTD_Customs_Duties_And_Taxes_And_Other_Levies.pdf</span>
-                        <span>YTD_Transaction_Count_Import_and_Export.pdf</span>
-                    </div>
-                    <div id="yearEndInterface" class="duration_category">
-                        <label>Sequence Number Parameter Update</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateYearEndInterface"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Sequence Number Parameter Update</span>
-                    </div>
-                    <div id="yearEndHolidays" class="duration_category">
-                        <label>Generate Holidays</label> 
-                        <input type="button" class="batch_button" value="Execute" id="generateYearEndHolidays"/>
-                        <label id="start" class="time-format"></label> 
-                        <label id="end" class="time-format"></label>
-                        <span>Generate Holidays</span>
-                    </div>  
-                </fieldset>
-                <br/>
-                <fieldset id="adHoc">
-                    <label class="duration">Ad-Hoc</label>
-                    <label id="start" class="time-format"></label> 
-                    <label id="end" class="time-format"></label>
-                    <label id="reportStatus" class="time-format"></label>
-                    <label id="reportName" class="adhocLabel"></label>
-                    <div id="adhoc" class="duration_category">
-                        <select id="adhoc_dropdown">
-                            <optgroup label="Interfaces">
-                                <option value="cifNormalization" class="interface">CIF Normalization</option>
-                                <option value="cifNormalization2" class="cifNormalization2">Extract Normalized CIFs</option>
-                                <option value="cifPurging" class="CIFPURGING">CIF Purging</option>
-                                <option value="updateAllocationUnitCode" class="interface">Update Allocation Unit Code</option>
-                                <option class="CASA">Populate CASA Accounts</option>
-                                <option value="abortPendingEtsReversal" class="interface">Abort Pending ETS Reversal</option>
-                                <option value="synchronizeRoutingStatus" class="interface">Synchronize Routing Status</option>
-<%--                                <option value="revertToPending" class="interface">Revert Data Entry to Pending</option>--%>
-                                <option value="rerouteTradeServiceJob" class="reroute">Re-route Approver</option>
-                                <option value="purgeEts" class="interface">Purge Unapproved ETS</option>
-                                <option value="glis" class="interface">GLIS Hand-Off File</option>
-                                <option value="processCicls" class="interface">Process CICLS Records</option>
-                                <option value="generateCiclsFile" class="interface">Generate CICLS Hand-Off File</option>
-                                <option value="gl" class="interface">GL Movement</option>
-                                <option value="master" class="interface">Master File</option>
-                                <option value="masterException" class="MASTEREXCEPTION">Master Exception Report</option>
-                                <option value="dw" class="interface">DW Parameter</option>
-                                <option value="cbr" class="interface">CBR Parameter</option>
-                                <option value="transaction" class="interface">AMLA Transaction</option>
-                                <option value="account" class="interface">AMLA Account</option>
-                                <option value="customerAccount" class="interface">AMLA Customer Account</option>
-                                <option value="customer" class="interface">AMLA Customer</option>
-                                <option value="extractItrs" class="interface">ITRS Interface</option>
-                                <option value="balance" class="interface">Balance</option>
-                                <option value="tagAsPending" class="interface">Tag As Pending</option>
-                                <option value="params" class="interface">GL Parameter</option>
-                                <option value="etsToPending" class="interface">Revert e-TS to Pending</option>
-                                <option value="purgeSecEmployeeAudit" class="interface">Purge SEC_EMPLOYEE_AUDIT</option>
-                                <option value="revalueEarmark" class="interface">Process Revalue</option>
-                                <option value="tagLcAsExpired" class="interface">Expire LCs</option>
-                                <option value="expiredAmla" class="interface2">Amla Expire LC</option>
-                                <option value="processRmaDocument" class="interface">Process Rma Document</option>
-                                <option value="extractSibs" class="sibsInterface">Extract SIBS GL Accounts</option>
-                                <option value="runDailyMasterGLSummary">Daily_Master_GL_Summary.xls</option>
-                                <option value="runDailyMasterGLDailyBalanceSummary">Daily_Master_GL_DailyBalance_Summary.xls</option>
-                                <option value="extractCic" class="cicInterface">CIC Monthly Report</option>
-                                <option value="extractCicHistorical" class="cicInterfaceHistorical">CIC Historical Report</option>
-                            </optgroup>
-                            <optgroup label="Daily Batch Reports">
-                                <option id="remittance" class="consolidatedReportType" value="runConsolidatedDailyReportDepositsCollected">Consolidated_Daily_Report_on_Deposits_Collected.pdf</option>
-                                <option value="runConsolidatedDailyReportDepositsCollected">Consolidated_Daily_Report_on_Deposits_Collected_2.pdf</option>
-                                <option id="remittance" class="consolidatedReportType" value="runConsolidatedReportDaliyCollectionsCdtOtherLevies">Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies.pdf</option>
-                                <option value="runConsolidatedReportDaliyCollectionsCdtOtherLevies">Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies_2.pdf</option>
-                                <option value="runConsolidatedReportDailyCollectionsAll">Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies_3.pdf</option>
-                                <option value="runConsolidatedReportDailyCollectionsImportExport">Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies_4.pdf</option>
-                                <option value="runConsolidatedReportDailyCollectionsFinalAdvance">Consolidated_Report_on_Daily_Collections_of_Customs_Duties_Taxes_and_Other_Levies_5.pdf</option>
-                                <option id="remittance" class="consolidatedReportType" value="runConsolidatedReportDailyCollectionsExportDocumentaryStampFees">Consolidated_Report_On_Daily_Collections_Of_Export_Documentary_Stamp_Fees.pdf</option>
-                                <option value="runConsolidatedReportDailyCollectionsExportDocumentaryStampFees">Consolidated_Report_On_Daily_Collections_Of_Export_Documentary_Stamp_Fees_2.pdf</option>
-                                <option id="remittance" class="consolidatedReportType" value="runConsolidatedReportDailyCollectionsImportProcessingFees">Consolidated_Report_on_Daily_Collections_of_Import_Processing_Fees.pdf</option>
-                                <option value="runConsolidatedReportDailyCollectionsImportProcessingFees">Consolidated_Report_on_Daily_Collections_of_Import_Processing_Fees_2.pdf</option>
-                                <option id="exception" class="reportType" value="runDailySummaryOfAccountingEntries">Daily_Exception_Report_of_Accounting_Entries.pdf</option>
-                                <option value="runDailyForeignCashLcOpened">Daily_Foreign_Cash_LCs_Opened.pdf</option>
-                                <option value="runDailyFxlcOpenedReportCdtDetails">Daily_Foreign_LCs_Opened_Report_with_CDT_Details.pdf</option>
-                                <option value="runDailyForeignRegularLcOpened">Daily_Foreign_Regular_LCs_Opened.pdf</option>
-                                <option value="runDailyFunding">Daily_Funding.pdf</option>
-                                <option value="runDailyOutstandingForeignLc">Daily_Outstanding_Foreign_LCs.pdf</option>
-                                <option value="dailyOutstandingCCBD">Daily_Outstanding_LCs_CCBD_Report.pdf</option>
-                                <option value="runDailyReportProcessedRefundsBatch">Daily_Report_on_Processed_Refund_2.pdf</option>
-                                <option value="runDailySummaryOfAccountingEntries">Daily_Summary_of_Accounting_Entries.pdf</option>
-
-                                <%-- FX Form 1 Reports --%>
-                                <%-- 
-                                <option id="report" class="cbReportType" value="runFxForm1Schedule7">Schedule_7.xls</option>
-                                <option id="text" class="cbReportType" value="runFxForm1Schedule7">TRD07.txt</option>
-                                --%>
-                                
-<%--                                <option id="report" class="cbReportType" value="runFxForm1Schedule3">Schedule_3.pdf</option>--%>
-<%--                                <option id="report" class="cbReportType" value="runFxForm1Schedule4">Schedule_4.pdf</option>--%>
-                                <option id="report" class="cbReportType" value="runFxForm1Schedule5">Schedule_5.pdf</option>
-                                <option id="report" class="cbReportType" value="runFxForm1Schedule9">Schedule_9.pdf</option>                        
-                                <option id="report" class="cbReportType" value="runFxForm1Schedule10">Schedule_10.pdf</option>
-                                <option id="report" class="cbReportType" value="runFxForm1Schedule11">Schedule_11.pdf</option>
-<%--                                <option id="text" class="cbReportType" value="runFxForm1Schedule3">TRD03</option>--%>
-<%--                                <option id="text" class="cbReportType" value="runFxForm1Schedule4">LOANSRVD.DBF</option>--%>
-                                <option id="text" class="cbReportType" value="runFxForm1Schedule5">CURRENTC.DBF</option>
-                                
-                        <%-- comment below TRD09, TRD10, TRD11 if GLFX Form 1 Output will be DBF--%>
-                                <option id="text" class="cbReportType" value="runFxForm1Schedule9">TRD09</option>
-                                <option id="text" class="cbReportType" value="runFxForm1Schedule10">TRD10</option>
-                                <option id="text" class="cbReportType" value="runFxForm1Schedule11">TRD11</option>
-                        
-                        <%-- comment below EXPORTB.DBF, LCDONEWB.DBF, IMPNEWB.DBF if GLFX Form 1 Output will be DBF--%>
-<%--                                <option id="text" class="cbReportType" value="runFxForm1Schedule9">EXPORTB.DBF</option>--%>
-<%--                                <option id="text" class="cbReportType" value="runFxForm1Schedule10">LCDONEWB.DBF</option>--%>
-<%--                                <option id="text" class="cbReportType" value="runFxForm1Schedule11">IMPNEWB.DBF</option>--%>
-
-                                <option value="runTfsCasaPostingReport">TFS_CASA_Posting_Report.pdf</option>
-                                <option value="runTradeServicesAMLAReportedTransactions">Trade_Services_AMLA_Reported_Transactions.pdf</option>
-                                <option value="runTramsReport">TRAMS.csv</option>
-                                <option value="runSchedule2Report">ITRS Schedule 2 Report</option>
-                                <option value="runSchedule2Exception">ITRS Schedule 2 Exception</option>
-                                <option value="runSchedule3Report">ITRS Schedule 3 Report</option>
-                                <option value="runSchedule3Exception">ITRS Schedule 3 Exception</option>
-                                <option value="runSchedule4Report">ITRS Schedule 4 Report</option>
-                                <option value="runSchedule4Exception">ITRS Schedule 4 Exception</option>                                
-                            </optgroup>
-                            <optgroup label="Weekly">
-                                <option id="viewWeeklyScheduleDocStamps108" class="reportType" value="runWeeklyScheduleDocStamps">Weekly_Schedule_of_Doc_Stamps_108.csv</option>
-                                <option id="viewWeeklyScheduleDocStamps113" class="reportType" value="runWeeklyScheduleDocStamps">Weekly_Schedule_of_Doc_Stamps_113.csv</option>
-                                <option id="viewWeeklyScheduleDocStampsTR" class="reportType" value="runWeeklyScheduleDocStamps">Weekly_Schedule_of_Doc_Stamps_TR.csv</option>
-                                <option id="weeklyForeignDomesticOpenLC" class="reportType" value="runWeeklyForeignDomesticOpenLC">Weekly_Foreign_Domestic_LCs_Opened.csv</option>
-                                <option value="runWeeklyReportOnMaturingUsancLc">Weekly_Report_on_Maturing_Usance_LCs.pdf</option>
-                            </optgroup>
-                            <optgroup label="Monthly">
-                                <option value="processRefBanks" class="interface">Process Ref Banks</option>
-                                <option value="cloneLnappf" class="interface">Clone LNAPPF</option>
-                                <option value="allocation" class="interface">Allocation File</option>
-                                <option value="allocationException" class="ALLOCATIONEXCEPTION">Allocation Exception Report</option>
-                                <option value="runCollectedTwoPercentCwt">Collected_2%_CWT.pdf</option>
-                                <option value="runConsolidatedReportDomesticLcOpenedForMonth">Consolidated_Report_on_Domestic_LCs_Opened_for_the_Month.pdf</option>
-                                <option value="runConsolidatedReportOnForeignLcOpenedForMonth">Consolidated_Report_on_Foreign_LCs_Opened_for_the_Month.pdf</option>
-                                <option value="runCustomsDutiesAndTaxesAndOtherLevies">Customs_Duties_And_Taxes_And_Other_Levies.pdf</option>
-                                <option value="runDmNonLcsNegoForTheYear">Dm_Non_Lcs_Negotiated_For_The_Year_Classified_By_Top_30_Importer_And_Other_Local_Bank.pdf</option>
-                                <option value="runDomesticLcOpenedForTheMonth">Domestic_LCs_Opened_for_the_Month.pdf</option>
-                                <option value="runExportNegofortheMonthperClient">Export_Negotiations_for_the_Month_per_Client.pdf</option>
-                                <option value="runexportNegoperCollectingBank">Export_Negotiations_per_Collecting_Bank.pdf</option>
-                                <option value="runExportPaymentsfortheMonthperClient">Export_Payments_for_the_Month_per_Client.pdf</option>
-                                <option value="runForeignLcOpenedForTheMonth">Foreign_LCs_Opened_for_the_Month.pdf</option>
-                                <option value="runFxNonLcsNegoForTheYear">Fx_Non_Lcs_Negotiated_For_The_Year_Classified_By_Top_30_Importer_And_Remitting_Bank.pdf</option>                          
-                                <option value="runListOfTransactionsWithNoCifNumber">List of Transactions With No CIF Number.xls</option>
-                                <option value="runMonthlyTransactionCountReport">Monthly_Transaction_Count.pdf</option>
-                                <option value="runOutstandingBankGuarantyReport">Outstanding_Bank_Guaranty.pdf</option>
-                                <option value="runOutstandingDomesticCashLcPerCurrency">Outstanding_Domestic_Cash_LCs_Per_Currency.pdf</option>
-                                <option value="runOutstandingDomesticCashLcPerImporter">Outstanding_Domestic_Cash_LCs_Per_Importer.pdf</option>
-                                <option value="runOutstandingDomesticSightLcPerCurrency">Outstanding_Domestic_Sight_LCs_Per_Currency.pdf</option>
-                                <option value="runOutstandingDomesticSightLcPerImporter">Outstanding_Domestic_Sight_LCs_Per_Importer.pdf</option>
-                                <option value="runOutstandingDomesticStandbyLcPerCurrency">Outstanding_Domestic_Standby_LCs_Per_Currency.pdf</option>
-                                <option value="runOutstandingDomesticStandbyLcPerImporter">Outstanding_Domestic_Standby_LCs_Per_Importer.pdf</option>
-                                <option value="runOutstandingDomesticUsanceLcPerCurrency">Outstanding_Domestic_Usance_LCs_Per_Currency.pdf</option>
-                                <option value="runOutstandingDomesticUsanceLcPerImporter">Outstanding_Domestic_Usance_LCs_Per_Importer.pdf</option>                             
-                                <option value="runOutstandingExportNegotiationDomestic">Outstanding_Export_Negotiations_Domestic.pdf</option>
-                                <option value="runOutstandingExportNegotiationForeign">Outstanding_Export_Negotiations_Foreign.pdf</option>                           
-                                <option value="runOutstandingForeignCashLcPerCurrency">Outstanding_Foreign_Cash_LCs_per_Currency.pdf</option>
-                                <option value="runOutstandingForeignCashLcPerImporter">Outstanding_Foreign_Cash_LCs_per_Importer2.pdf</option>
-                                <option value="runOutstandingForeignSightLcPerCurrency">Outstanding_Foreign_Sight_LCs_per_Currency.pdf</option>
-                                <option value="runOutstandingForeignSightLcPerImporter">Outstanding_Foreign_Sight_LCs_per_Importer.pdf</option>
-                                <option value="runOutstandingForeignStandbyLcPerCurrency">Outstanding_Foreign_Standby_LCs_per_Currency.pdf</option>
-                                <option value="runOutstandingForeignStandbyLcPerImporter">Outstanding_Foreign_Standby_LCs_per_Importer.pdf</option>
-                                <option value="runOutstandingForeignUsanceLcPerCurrency">Outstanding_Foreign_Usance_LCs_per_Currency.pdf</option>
-                                <option value="runOutstandingForeignUsanceLcPerImporter">Outstanding_Foreign_Usance_LCs_per_Importer.pdf</option>
-                                <option value="runOutstandingInwardBillsForCollectionDmDaDpPerCurrency">Outstanding_Inward_Bills_For_Collection_Dm_Dp_Per_Currency.pdf</option>
-                                <option value="runOutstandingInwardBillsForCollectionFxDaDpPerCurrency">Outstanding_Inward_Bills_For_Collection_Fx_Da_Dp_Oa_Dr_Per_Currency.pdf</option>
-                                <option value="runOutstandingInwardBillsforCollectionFXLCperCurrency">Outstanding_Inward_Bills_for_Collection_FXLC_per_Currency.pdf</option>
-                                <option value="runOutstandingInwardBillsforCollectionDMLCperCurrency">Outstanding_Inward_Bills_for_Collection_DMLC_per_Currency.pdf</option>
-                                <option value="runOutstandingMarginalDepositsReport">Outstanding_Marginal_Deposits.pdf</option>                             
-                                <option value="runProductAvailmentsReport">Product_Availments_Exception_Report.xls</option>
-                                <option id="notException" class="productAvailReportType" value="runProductAvailmentsReport">Product_Availments_Report.xls</option>
-                                <option value="runProfitabilityMonitoringReport">Profitability_Monitoring_Exception_Report.xls</option>
-                                <option id="notException" class="profitMonitoringReportType" value="runProfitabilityMonitoringReport">Profitability_Monitoring_Report.xls</option>
-                                <option value="runTfsMcoReport">Tfs_Mco_Report.xls</option>
-                                <option value="runTfsMcoReportSpecial">Second Day Tfs_Mco_Report.xls</option>
-                                <option value="runVolumetrics">Volumetrics_Report.pdf</option>
-                                <option value="runYtdReportOnDomesticLcOpened">YTD_Report_on_Domestic_LCs_Opened.pdf</option>
-                                <option value="runYtdReportOnDomesticLcOpenedClassifiedByBank">YTD_Report_on_Domestic_LCs_Opened_Classified_by_top_30_Importer_and_Advising_Local_Bank_in_PHP.pdf</option>
-                                <option value="runYtdReportOnForeignLcOpened">YTD_Report_on_Foreign_LCs_Opened.pdf</option>
-                                <option value="runYtdReportOnForeignLcOpenedClassifiedByBank">YTD_Report_on_Foreign_LCs_Opened_Classified_by_top_30_Importer_and_Advising_Bank_in_USD.pdf</option>
-                                <option class="cocreeReport" value="runCocreeReport">EXPOSURE_UPLOAD_TF.xls</option>
-                            </optgroup>
-                            <optgroup label="Quarterly">
-                                <option value="runApOthers">AP_Others.pdf</option>
-                                <option value="runArOthers">AR_Others.pdf</option>
-                                <option id="report" class="cbReportType" value="runCredexReport">CREDEX_Report.pdf</option>
-                                <option id="text" class="cbReportType" value="runCredexReport">FORM4.xls</option>
-                                <option value="runQuarterlyReportOnForeignStandybyLcsOpened">Quarterly_Report_on_Foreign_Standby_LCs_Opened.pdf</option>
-                            </optgroup>
-                            <optgroup label="Yearly">
-                                <option value="runYearEndReportOnForeignLcsOpenedPerAdvisingBank">Year_End_Report_on_Foreign_LCS_Opened_per_Advising_Bank.pdf</option>
-                                <option value="runYearEndReportOnForeignLcsOpenedPerConfirmingBank">Year_End_Report_on_Foreign_LCS_Opened_per_Confirming_Bank.pdf</option>
-                                <option value="runYearEndReportOnForeignLcsOpenedPerCountry">Year_End_Report_on_Foreign_LCS_Opened_per_Country.pdf</option>
-                                <option value="runYtdCustomsDutiesAndTaxesAndOtherLevies">YTD_Customs_Duties_And_Taxes_And_Other_Levies.pdf</option>
-                                <option value="runYtdTransactionCountImportExportReport">YTD_Transaction_Count_Import_and_Export.pdf</option>
-                                <option value="yearEndInsert" class="yearEndInterface">Sequence Number Parameter Update</option>
-                                <option value="generateYearEndHolidays" class="yearEndHolidays">Generate Holidays</option>
-                                <option value="cifPurgingPhase1" class="cifPurgingInterface">Purge Accounts Phase 1</option>
-                                <option value="cifPurgingPhase2" class="cifPurgingInterface2">Purge Accounts Phase 2</option>                               
-                                <option value="cifPurgingPhase3" class="cifPurgingInterface3">Clean-up TFSTEMPDB</option>
-                            </optgroup>
-                        </select>
-                        <br/>
-                        <input type="button" class="batch_button" value="Execute" id="generateAdhoc"/>
-                    </div>
-                </fieldset>
-            </form>
-            <g:render template="../layouts/loading"/>    
-            <g:render template="../layouts/alert"/> 
-
-            <g:render template="../layouts/confirm_alert"/>    
-            <g:render template="../commons/popups/online_reports_popup"/>
-                <g:javascript src="batch/batch_events.js"/>
-        </div>
-    </div>
-</body>
-</html>
