diff --git a/application.properties b/application.properties
--- a/application.properties
+++ b/application.properties
@@ -1,5 +1,5 @@
 #Grails Metadata file
-#Tue Nov 06 16:20:31 SGT 2018
+#Tue Feb 06 13:12:46 CST 2024
 app.grails.version=2.0.1
 app.name=tfs-web
 app.servlet.version=2.5
diff --git a/grails-app/conf/BuildConfig.groovy b/grails-app/conf/BuildConfig.groovy
--- a/grails-app/conf/BuildConfig.groovy
+++ b/grails-app/conf/BuildConfig.groovy
@@ -22,6 +22,7 @@
         grailsHome()
         grailsCentral()
         mavenCentral()
+        mavenRepo "file:/D:/m2/repository"
 
         // uncomment these to enable remote dependency resolution from public Maven repositories
         //mavenCentral()
@@ -30,6 +31,9 @@
         //mavenRepo "http://repository.codehaus.org"
         //mavenRepo "http://download.java.net/maven/2/"
         //mavenRepo "http://repository.jboss.com/maven2/"
+
+        mavenRepo "https://repo.grails.org/grails/core" 
+        mavenRepo "https://repo.grails.org/grails/plugins"  
     }
     dependencies {
         // specify dependencies here under either 'build', 'compile', 'runtime', 'test' or 'provided' scopes eg.
diff --git a/grails-app/controllers/com/ucpb/tfsweb/batch/BatchController.groovy b/grails-app/controllers/com/ucpb/tfsweb/batch/BatchController.groovy
--- a/grails-app/controllers/com/ucpb/tfsweb/batch/BatchController.groovy
+++ b/grails-app/controllers/com/ucpb/tfsweb/batch/BatchController.groovy
@@ -4,6 +4,8 @@
 import java.text.SimpleDateFormat
 import net.ipc.utils.DateUtils
 
+class BatchController {
+
 	/*	PROLOGUE:
  * 	(revision)
 	SCR/ER Number: 20150820-072
@@ -13,5 +15,4 @@
 	Program [Revision] Details: add a response whether to failed in UI or Success.
 	PROJECT: Web
 	MEMBER TYPE  : Groovy
-	Project Name: BatchController
  */
@@ -17,70 +18,5 @@
  */
-
-/*  PROLOGUE:
- * 	(revision)
-	SCR/ER Number: SCR IBD-16-0219-01
-	SCR/ER Description: Generate CIC File
-	[Revised by:] Jesse James Joson
-	[Date Deployed:] 02/24/2016
-	Program [Revision] Details: Add some methods for execution of CIC file
-	PROJECT: WEB
-	MEMBER TYPE  : Groovy
-	Project Name: BatchController
- */
- 
- 
- /*  PROLOGUE:
- * 	(revision)
-	SCR/ER Number: 
-	SCR/ER Description: 
-	[Revised by:] Allan Comboy Jr.
-	[Date Deployed:] 06/07/2016
-	Program [Revision] methods to check Sibs
-	PROJECT: WEB
-	MEMBER TYPE  : Groovy
-	Project Name: BatchController
- */
-
-/*  PROLOGUE:
- * 	(revision)
-	SCR/ER Number:20160623-080
-	SCR/ER Description:
-	[Revised by:] Allan Comboy Jr.
-	[Date Deployed:] 06/24/2016
-	Program [Revision] methods to check Sibs for CREDEX AND FORM4
-	PROJECT: WEB
-	MEMBER TYPE  : Groovy
-	Project Name: BatchController
- */
- 
-/**PROLOGUE:
- * 	(revision)
-	SCR/ER Number: ER# 20140909-038
-	SCR/ER Description: CIF Normalization Not Working in TFS
-	[Revised by:] Jesse James Joson
-	[Date Created:] 08/05/2016
-	Program [Revision] Details: The CIF Normalization was redesigned, since not all tables are normalized. Add method for the CIF Extraction.
-	PROJECT: WEB
-	MEMBER TYPE  : Groovy
-	Project Name: BatchController
- *
- */
-
-/*PROLOGUE:
- * 	(revision)
-	SCR/ER Number: SCR# IBD-16-0615-01
-	SCR/ER Description: To comply with the requirement for CIF archiving/purging of inactive accounts in TFS.
-	[Revised by:] Jesse James Joson
-	[Date Revised:] 09/22/2016
-	Program [Revision] Details: additional methods to run account purging
-	PROJECT: WEB
-	MEMBER TYPE  : Groovy
-	Project Name: BatchController
- *
- */
- 
-class BatchController {
-
+	
     def coreAPIService
 	def batchService
 	
@@ -94,5 +30,4 @@
 
     def interfaceFiles(){
 		ArrayList<String> methodNames = ['expiredAmla',
-										'synchronizeRoutingStatus',
 										'abortPendingEtsReversal',
@@ -98,5 +33,5 @@
 										'abortPendingEtsReversal',
-//										'revertToPending',
+										'revertToPending',
 										'purgeEts',
 										'tagAsPending',
 										'etsToPending',
@@ -113,12 +48,6 @@
 		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
 		render jsonParams as JSON
     }
-
-    def glis(){
-		ArrayList<String> methodNames = ['glis']
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-    }
 	
 	def sibsInterfaceFiles(){
 		ArrayList<String> methodNames = ['extractSibs'
@@ -127,21 +56,4 @@
 		render jsonParams as JSON
 	}
 	
-	// Start IBD-16-0219-01
-	
-	def cicInterfaceFiles(){
-		ArrayList<String> methodNames = ['extractCic'
-										]
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-	}
-	
-	def cicInterfaceFiles2(){
-		ArrayList<String> methodNames = ['extractCicHistorical'
-										]
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-	}
-	// End IBD-16-0219-01
-	
 	def updateAllocation(){
@@ -147,6 +59,6 @@
 	def updateAllocation(){
-		println ("Now Starting in Update Allocation - " + new Date())
+		println "Now Starting in Update Allocation"
 		ArrayList<String> methodNames = ['updateAllocationUnitCode'
 										]
 		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
 		
@@ -149,8 +61,8 @@
 		ArrayList<String> methodNames = ['updateAllocationUnitCode'
 										]
 		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
 		
-		println ("Now Rendering JSON in Update Allocation" + new Date())
+		println "Now Rendering JSON in Update Allocation"
 		
 		render jsonParams as JSON
 	}
@@ -174,15 +86,8 @@
 		render jsonParams as JSON
 	}
 	
-	// ER# 20140909-038 : Start
-	def cifNormalization2(){
-		ArrayList<String> methodNames = ['cifNormalization2']
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-	}
-	// ER# 20140909-038 : End
 	def cifPurging() {
 		ArrayList<String> methodNames = ['cifPurging']
 		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
 		render jsonParams as JSON
 	}
@@ -184,15 +89,8 @@
 	def cifPurging() {
 		ArrayList<String> methodNames = ['cifPurging']
 		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
 		render jsonParams as JSON
 	}
-	
-	def rerouteTradeServiceJob() {
-		ArrayList<String> methodNames = ['rerouteTradeServiceJob']
-		def jsonParams = [successList:batchService.executeReRouteApprover(params, methodNames)]
-		render jsonParams as JSON
-	}
-
 
 	
 	def afterReportInterface(){
@@ -204,6 +102,7 @@
 										'params',
 										'tagLcAsExpired',
 										'revalueEarmark',
+										'pusoPogi',
 										]
 										
 		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
@@ -215,9 +114,6 @@
 		render jsonParams as JSON
 	}
 
-	
-	
-	
     def populateCasaAccounts(){
         println "populating casa accounts"
         def passedParams= [:]
@@ -250,59 +146,4 @@
 		render jsonParams as JSON
 	}
 
-	def yearEndInterfaceFiles(){
-		ArrayList<String> methodNames = ['yearEndInsert'
-										]
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-	}
-	
-	//Start IBD-16-0615-01
-	def cifPurgingInterfaceFiles(){
-		ArrayList<String> methodNames = ['cifPurgingPhase1'
-										]
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-	}
-	
-	def cifPurgingInterfaceFiles2(){
-		ArrayList<String> methodNames = ['cifPurgingPhase2'
-										]
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-	}
-	
-	def cifPurgingInterfaceFiles3(){
-		ArrayList<String> methodNames = ['cifPurgingPhase3'
-										]
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-	}
-	//End IBD-16-0615-01
-	def timeThread(){
-	
-		ArrayList<String> singleMethod = ['sibsTimer'
-										 ]
-
-		def jsonParams = [successList:batchService.testMeth(params, singleMethod)]	
-	
-	
-		   
-		render jsonParams as JSON
-
-
-	
-	}
-	
-	def executeDailyItrs(){
-		ArrayList<String> methodNames = ['extractItrs'
-										]
-		def jsonParams = [successList:batchService.executeInterfaceMethods(params, methodNames)]
-		render jsonParams as JSON
-	}
-	
-	def retrieveInterfaceDirectories(){
-		def jsonParams = [directories:batchService.getInterfaceDirectories()]
-		render jsonParams as JSON
-	}
-}
+}
\ No newline at end of file
